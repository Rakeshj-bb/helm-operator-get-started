# Source: baas-reference-stack/templates/workloads/dbs/capabilities/access-control.yaml
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: access-control
  namespace: backbase
spec:
  helmVersion: v3

  releaseName: access-control
  targetNamespace: backbase

  chart:
    repository: https://repo.backbase.com/backbase-charts
    name: access-control
    version: 0.1.2

  values:
    global:
      jwt:
        enabled: true
        SIG_SECRET_KEY_fromSecret: true
        USERCTX_KEY_fromSecret: true

      podExtraAnnotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "3306"

      service:
        enabled: true

      app:
        image:
          tag: "2022.02"
          pullPolicy: Always

      priorityClassName: baas-high
      podSecurityContext:
        runAsGroup: 65532
        runAsUser: 65532
      startupProbe:
        enabled: true
        path: /actuator/health/liveness
      livenessProbe:
        enabled: true
        path: /actuator/health/liveness
      readinessProbe:
        enabled: true
        path: /actuator/health/readiness

      env:
        "spring.datasource.hikari.maximum-pool-size": "10"
        "spring.datasource.hikari.data-source-properties.sslMode": "VERIFY_CA"
        "spring.datasource.hikari.data-source-properties.trustCertificateKeyStoreUrl": "file:/truststore/aws-rds-truststore.jks"
        "spring.datasource.hikari.data-source-properties.trustCertificateKeyStorePassword": "password"
      volumes:
        - name: aws-rds-truststore
          secret:
            defaultMode: 420
            secretName: aws-rds-truststore
      volumeMounts:
        - mountPath: /truststore
          name: aws-rds-truststore
          readOnly: true

    accesscontrol:
      enabled: true
      replicaCount: 2
      database:
        enabled: true
        sid: "dbs-accesscontrol"
        username: "accesscontrol"
        existingSecret: "db-dbs-accesscontrol"
        existingSecretKey: "db_password"
      env:
        "BACKBASE_COMMUNICATION_HTTP_ACCESS-TOKEN-URI": "http://token-converter:8080/oauth/token"
        "LOGGING_LEVEL_COM_BACKBASE": "INFO"
        "LOGGING_LEVEL_COM_SECURITY": "INFO"
        "LOGGING_LEVEL_ORG_SPRINGFRAMEWORK": "INFO"
        "LOGGING_LEVEL_ROOT": "INFO"
        "SPRING_LIQUIBASE_ENABLED": "true"
        "backbase.security.mtls.enabled": "false"
        "backbase.security.public.paths": "/**"
        "spring.autoconfigure.exclude": "org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration"
        "spring.cloud.loadbalancer.ribbon.enabled": "false"
        "spring.jpa.show-sql": "false"
        "spring.liquibase.change-log": "classpath:db/changelog/db.changelog-persistence.xml"
        "spring.profiles.active": "live,create,init,token"

  valuesFrom:
    - configMapKeyRef:
        name: environment
        key: values.yaml
    - configMapKeyRef:
        name: environment
        key: registry.yaml
